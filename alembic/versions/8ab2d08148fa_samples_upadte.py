"""samples upadte

Revision ID: 8ab2d08148fa
Revises: a3ab65bff98d
Create Date: 2024-02-16 00:00:25.206435

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8ab2d08148fa'
down_revision: Union[str, None] = 'a3ab65bff98d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('samples', sa.Column('name', sa.String(), nullable=False))
    op.add_column('samples', sa.Column('batch_no', sa.String(), nullable=False))
    op.add_column('samples', sa.Column('manufactured_date', sa.Date(), nullable=False))
    op.add_column('samples', sa.Column('expiry_date', sa.Date(), nullable=False))
    op.add_column('samples', sa.Column('batch_size', sa.Integer(), nullable=False))
    op.add_column('samples', sa.Column('received_quantity', sa.Integer(), nullable=False))
    op.drop_constraint('samples_company_id_fkey', 'samples', type_='foreignkey')
    op.drop_constraint('samples_trf_id_fkey', 'samples', type_='foreignkey')
    op.drop_constraint('samples_registration_id_fkey', 'samples', type_='foreignkey')
    op.drop_column('samples', 'created_at')
    op.drop_column('samples', 'trf_id')
    op.drop_column('samples', 'city')
    op.drop_column('samples', 'customer_address_line1')
    op.drop_column('samples', 'customer_address_line2')
    op.drop_column('samples', 'state')
    op.drop_column('samples', 'company_name')
    op.drop_column('samples', 'test_type')
    op.drop_column('samples', 'updated_at')
    op.drop_column('samples', 'date_of_registration')
    op.drop_column('samples', 'pincode_no')
    op.drop_column('samples', 'registration_id')
    op.drop_column('samples', 'gst')
    op.drop_column('samples', 'date_of_received')
    op.drop_column('samples', 'company_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('samples', sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('date_of_received', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('gst', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('registration_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('pincode_no', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('date_of_registration', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('test_type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('company_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('state', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('customer_address_line2', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('customer_address_line1', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('trf_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.create_foreign_key('samples_registration_id_fkey', 'samples', 'registrations', ['registration_id'], ['id'])
    op.create_foreign_key('samples_trf_id_fkey', 'samples', 'test_request_forms', ['trf_id'], ['id'])
    op.create_foreign_key('samples_company_id_fkey', 'samples', 'customers', ['company_id'], ['id'])
    op.drop_column('samples', 'received_quantity')
    op.drop_column('samples', 'batch_size')
    op.drop_column('samples', 'expiry_date')
    op.drop_column('samples', 'manufactured_date')
    op.drop_column('samples', 'batch_no')
    op.drop_column('samples', 'name')
    # ### end Alembic commands ###
