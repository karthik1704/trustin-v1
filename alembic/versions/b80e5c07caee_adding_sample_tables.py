"""Adding sample tables

Revision ID: b80e5c07caee
Revises: f360a5220bfe
Create Date: 2024-02-17 12:40:51.550522

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b80e5c07caee'
down_revision: Union[str, None] = 'f360a5220bfe'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sample_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('registration_id', sa.Integer(), nullable=False),
    sa.Column('batch_no', sa.String(), nullable=False),
    sa.Column('manufactured_date', sa.Date(), nullable=False),
    sa.Column('expiry_date', sa.Date(), nullable=False),
    sa.Column('batch_size', sa.Integer(), nullable=False),
    sa.Column('received_quantity', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['registration_id'], ['registrations.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sample_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sample_id', sa.Integer(), nullable=False),
    sa.Column('sample_status_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sample_id'], ['samples.id'], ),
    sa.ForeignKeyConstraint(['sample_status_id'], ['sample_status.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sample_requests_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sample_request_id', sa.Integer(), nullable=False),
    sa.Column('from_status_id', sa.Integer(), nullable=False),
    sa.Column('to_status_id', sa.Integer(), nullable=False),
    sa.Column('comments', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['from_status_id'], ['sample_status.id'], ),
    sa.ForeignKeyConstraint(['sample_request_id'], ['samples.id'], ),
    sa.ForeignKeyConstraint(['to_status_id'], ['sample_status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sample_test_parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sample_id', sa.Integer(), nullable=False),
    sa.Column('test_parameter_id', sa.Integer(), nullable=False),
    sa.Column('test_type', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sample_id'], ['samples.id'], ),
    sa.ForeignKeyConstraint(['test_parameter_id'], ['testingparameters.id'], ),
    sa.ForeignKeyConstraint(['test_type'], ['testingparameters.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('registrations', sa.Column('created_by', sa.Integer(), nullable=False))
    op.add_column('registrations', sa.Column('updated_by', sa.Integer(), nullable=False))
    op.add_column('registrations', sa.Column('product', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'registrations', 'users', ['created_by'], ['id'])
    op.create_foreign_key(None, 'registrations', 'users', ['updated_by'], ['id'])
    op.create_foreign_key(None, 'registrations', 'products', ['product'], ['id'])
    op.add_column('samples', sa.Column('sample_id', sa.String(), nullable=False))
    op.add_column('samples', sa.Column('batch_id', sa.Integer(), nullable=False))
    op.add_column('samples', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('samples', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False))
    op.add_column('samples', sa.Column('created_by', sa.Integer(), nullable=False))
    op.add_column('samples', sa.Column('updated_by', sa.Integer(), nullable=False))
    op.drop_constraint('samples_registration_id_fkey', 'samples', type_='foreignkey')
    op.create_foreign_key(None, 'samples', 'users', ['updated_by'], ['id'])
    op.create_foreign_key(None, 'samples', 'users', ['created_by'], ['id'])
    op.create_foreign_key(None, 'samples', 'batches', ['batch_id'], ['id'])
    op.drop_column('samples', 'received_quantity')
    op.drop_column('samples', 'manufactured_date')
    op.drop_column('samples', 'batch_size')
    op.drop_column('samples', 'batch_no')
    op.drop_column('samples', 'expiry_date')
    op.drop_column('samples', 'registration_id')
    op.add_column('testingparameters', sa.Column('customer_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'testingparameters', 'customers', ['customer_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'testingparameters', type_='foreignkey')
    op.drop_column('testingparameters', 'customer_id')
    op.add_column('samples', sa.Column('registration_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('expiry_date', sa.DATE(), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('batch_no', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('batch_size', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('manufactured_date', sa.DATE(), autoincrement=False, nullable=False))
    op.add_column('samples', sa.Column('received_quantity', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'samples', type_='foreignkey')
    op.drop_constraint(None, 'samples', type_='foreignkey')
    op.drop_constraint(None, 'samples', type_='foreignkey')
    op.create_foreign_key('samples_registration_id_fkey', 'samples', 'registrations', ['registration_id'], ['id'])
    op.drop_column('samples', 'updated_by')
    op.drop_column('samples', 'created_by')
    op.drop_column('samples', 'updated_at')
    op.drop_column('samples', 'created_at')
    op.drop_column('samples', 'batch_id')
    op.drop_column('samples', 'sample_id')
    op.drop_constraint(None, 'registrations', type_='foreignkey')
    op.drop_constraint(None, 'registrations', type_='foreignkey')
    op.drop_constraint(None, 'registrations', type_='foreignkey')
    op.drop_column('registrations', 'product')
    op.drop_column('registrations', 'updated_by')
    op.drop_column('registrations', 'created_by')
    op.drop_table('sample_test_parameters')
    op.drop_table('sample_requests_history')
    op.drop_table('sample_requests')
    op.drop_table('batches')
    op.drop_table('sample_status')
    # ### end Alembic commands ###
