"""adding reg test params1

Revision ID: 7999b7103e1b
Revises: 21f2df3a5d57
Create Date: 2024-03-01 23:23:22.086390

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7999b7103e1b'
down_revision: Union[str, None] = '21f2df3a5d57'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('registration_test_parameters', 'test_params_id',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.create_foreign_key(None, 'registration_test_parameters', 'testingparameters', ['test_params_id'], ['id'])
    op.alter_column('sample_test_parameters', 'test_type',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=False)
    # op.drop_constraint('sample_test_parameters_test_type_fkey', 'sample_test_parameters', type_='foreignkey')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key('sample_test_parameters_test_type_fkey', 'sample_test_parameters', 'testingparameters', ['test_type'], ['id'])
    op.alter_column('sample_test_parameters', 'test_type',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_constraint(None, 'registration_test_parameters', type_='foreignkey')
    op.alter_column('registration_test_parameters', 'test_params_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    # ### end Alembic commands ###
