"""Adding sample workflow tables

Revision ID: f00746133966
Revises: 4ba16e10734a
Create Date: 2024-02-24 23:42:49.896950

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f00746133966'
down_revision: Union[str, None] = '4ba16e10734a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sample_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sample_id', sa.Integer(), nullable=False),
    sa.Column('from_status_id', sa.Integer(), nullable=False),
    sa.Column('to_status_id', sa.Integer(), nullable=False),
    sa.Column('comments', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['from_status_id'], ['sample_status.id'], ),
    sa.ForeignKeyConstraint(['sample_id'], ['samples.id'], ),
    sa.ForeignKeyConstraint(['to_status_id'], ['sample_status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sample_workflows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sample_id', sa.Integer(), nullable=False),
    sa.Column('sample_status_id', sa.Integer(), nullable=False),
    sa.Column('assigned_to', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), server_default='Yet to start', nullable=False),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sample_id'], ['samples.id'], ),
    sa.ForeignKeyConstraint(['sample_status_id'], ['sample_status.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('sample_requests')
    op.drop_table('sample_requests_history')
    op.add_column('samples', sa.Column('assigned_to', sa.Integer(), nullable=False))
    op.add_column('samples', sa.Column('status_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'samples', 'sample_status', ['assigned_to'], ['id'])
    op.create_foreign_key(None, 'samples', 'users', ['status_id'], ['id'])
    # ### end Alembic commands ###
    
def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'samples', type_='foreignkey')
    op.drop_constraint(None, 'samples', type_='foreignkey')
    op.drop_column('samples', 'status_id')
    op.drop_column('samples', 'assigned_to')
    op.create_table('sample_requests_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('sample_request_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('from_status_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('to_status_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('comments', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='sample_requests_history_created_by_fkey'),
    sa.ForeignKeyConstraint(['from_status_id'], ['sample_status.id'], name='sample_requests_history_from_status_id_fkey'),
    sa.ForeignKeyConstraint(['sample_request_id'], ['samples.id'], name='sample_requests_history_sample_request_id_fkey'),
    sa.ForeignKeyConstraint(['to_status_id'], ['sample_status.id'], name='sample_requests_history_to_status_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sample_requests_history_pkey')
    )
    op.create_table('sample_requests',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('sample_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sample_status_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='sample_requests_created_by_fkey'),
    sa.ForeignKeyConstraint(['sample_id'], ['samples.id'], name='sample_requests_sample_id_fkey'),
    sa.ForeignKeyConstraint(['sample_status_id'], ['sample_status.id'], name='sample_requests_sample_status_id_fkey'),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name='sample_requests_updated_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='sample_requests_pkey')
    )
    op.drop_table('sample_workflows')
    op.drop_table('sample_history')
    # ### end Alembic commands ###
